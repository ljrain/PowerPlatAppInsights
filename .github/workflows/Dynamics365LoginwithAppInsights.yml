name: Dynamics 365 Login with App Insights

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'Currently not in use'
        required: true
        default: Test

permissions:
  contents: write

  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '5.0.x'  # Update to a supported .NET version

    - name: Install OpenSSL 1.0
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.10_amd64.deb
        wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0-dev_1.0.2n-1ubuntu5.10_amd64.deb
        sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.10_amd64.deb
        sudo dpkg -i libssl1.0-dev_1.0.2n-1ubuntu5.10_amd64.deb

   # - name: Install Microsoft.CrmSdk.XrmTooling.CrmConnector
   #   run: dotnet tool install --global Microsoft.CrmSdk.XrmTooling.CrmConnector

   # - name: Login to Dynamics 365
   #   run: |
   #     dotnet tool run Microsoft.CrmSdk.XrmTooling.CrmConnector --username ${{ secrets.DYNAMICS_USERNAME }} --password ${{ secrets.DYNAMICS_PASSWORD }}

    - name: Track Availability in App Insights
      run: |
        echo "Tracking availability..."
        dotnet new console -o TrackAvailabilityApp
        cd TrackAvailabilityApp
        dotnet add package Microsoft.ApplicationInsights
        echo 'using System; using Microsoft.ApplicationInsights; using Microsoft.ApplicationInsights.Extensibility; using Microsoft.ApplicationInsights.DataContracts; class Program { static void Main() { var telemetryClient = new TelemetryClient(new TelemetryConfiguration("${{ secrets.APPINSIGHTS_INSTRUMENTATIONKEY }}")); var availability = new AvailabilityTelemetry("LoginTest", DateTime.UtcNow, TimeSpan.FromSeconds(30), "Location", true); telemetryClient.TrackAvailability(availability); telemetryClient.Flush(); } }' > Program.cs
        dotnet run
